#shopping_cart_total {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-bottom: 200px;
}
.order_container {
    width: 1250px;
    margin: auto;
}

#shopping_cart_form {
    display: flex;
    justify-content: space-between;
    gap: 20px;
    padding: 0;
}
.shopping_cart_info {
    position: relative;
    justify-content: center;
    flex-direction: column;
    width: 70%;
}

.cart_detail {
    border-radius: 14px;
    /* background: #38be43; */

    width: 100%;
    padding: 15px 30px;
    box-sizing: border-box;
}

.cart-quantity-input-container {
    user-select: none;
    display: flex;
    height: 30px;
    border: none;
    color: #515154;
    background: #c4c4c4;
    font-size: 16pt;
    width: 70%;
    /* margin: 10px 0 60px; */
    justify-content: center;
    border-radius: 5px;
    gap: 5px;
}
.cart-quantity-input-container button {
    background-color: transparent;
    border: none;
    color: #000000;
    cursor: pointer; /* Hiển thị con trỏ khi di chuột qua */
}
.cart-quantity-input-container input {
    width: 25px;
    border: none;
    background-color: transparent;
    text-align: center;
    outline: none;
}

table {
    width: 100%;
    display: table;
    border-collapse: separate;
    box-sizing: border-box;
    text-indent: initial;
    border-spacing: 2px;
    border-color: rgb(13, 69, 133);
    /*     
Thuộc tính order-collapse trong CSS có chức năng xác định các đường viền của bảng (table) có tách biệt nhau hay không. 
Giá trị mặc định của thuộc tính này là separate, có nghĩa là các đường viền của các ô bảng sẽ được tách biệt nhau.
Khi sử dụng giá trị separate cho thuộc tính order-collapse, ta có thể sử dụng thuộc tính border-spacing để xác định khoảng cách giữa các đường viền của các ô bảng 
khi sử dụng giá trị collapse cho thuộc tính order-collapse, các đường viền của các ô bảng sẽ được gộp lại thành một đường viền duy nhất.*/
}
.option img {
    height: 20px;
    width: 20px;
}
.product-info1 img {
    height: 100px;
    width: 100px;
}

th,
td {
    padding: 10px;
    text-align: left;
    border-bottom: 3px solid #969696;
    line-height: 1.5;
    font-size: 1em;
}
.product-info2,
.quantity,
.option,
.unit-price {
    margin: 0;
    padding-top: 10px;
    vertical-align: top;
}
.cart_option {
    padding: 10px 0;
}
.button-cart,
.button3 {
    margin-top: 10px 20px;
    background: #fff;
    border: 2px solid var(--menu-color);
    border-radius: 8px;
    color: #0066cc;
    min-width: 150px;
    font-size: 14px;
    padding: 10px 20px;
    cursor: pointer;
}
.row {
    display: flex;
    /* justify-content: center; */
    align-items: center;
    flex-direction: column;
    width: 30%;
    /* background-color: #2be7e7; */
    padding-top: 27px;
}
.row p {
    align-self: flex-start;
    padding-left: 1px;
    line-height: 1.5;
    font-size: 1em;
    font-weight: bold;
}

#giohang {
    display: flex;
    flex-direction: column;
    /* định hướng các ptu con trong container */
    align-items: center;
    /* căn giữa ptu theo trục chính của container 
    -> các ptu con xếp theo chiều dọc và căn giữa theo chiều ngang(trục chính) của container */
}
#p_product {
    user-select: none;
    pointer-events: none;
    margin: 30px 0 30px 0;
    width: 462px;
    height: 35.82px;
    color: #000;
    text-align: center;
    font-size: 48px;
    font-style: normal;
    font-weight: 600;
}

@media screen and (max-width: 1279px) {
    .order_container {
        width: 1000px;
    }
}

@media screen and (max-width: 1024px) {
    .order_container {
        width: 700px;
    }
}
